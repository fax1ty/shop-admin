import { Coins, FadersHorizontal, Storefront, UserList } from "phosphor-react";
import { createElement, useMemo } from "react";
import { Link } from "react-router-dom";
import Twemoji from "react-twemoji";
import { cannots } from "./cannots";

import classes from "./styles.module.scss";

function randomItem<T>(items: Array<T>) {
  return items[Math.floor(Math.random() * items.length)];
}

export const MainScreen = () => {
  const cannot = useMemo(
    () =>
      [randomItem(cannots), randomItem(cannots), randomItem(cannots)].join(
        ", "
      ),
    []
  );

  return (
    <>
      <header>
        <div className={classes.heading}>
          <h1>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å</h1>
          <Twemoji options={{ className: classes.hand }}>üëã</Twemoji>
        </div>

        <h2>
          –≠—Ç–æ –∞–¥–º–∏–Ω–∫–∞ –º–∞–≥–∞–∑–∏–Ω–∞. –ó–¥–µ—Å—å –í—ã –º–æ–∂–µ—Ç–µ –¥–µ–ª–∞—Ç—å —Ä–∞–∑–Ω—ã–µ —à—Ç—É–∫–∏.
          <br />
          –ö–æ–Ω–µ—á–Ω–æ, –í—ã –Ω–µ —Å–º–æ–∂–µ—Ç–µ {cannot}
        </h2>

        <h3>–ù–æ –∑–∞—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å —Å–ª–µ–¥—É—é—â–µ–µ</h3>
      </header>

      <div className={classes.actions}>
        {[
          {
            t: "–¢–æ–≤–∞—Ä—ã",
            d: "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å, –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–ª–∏ —É–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä",
            l: "/items",
            i: Storefront,
          },
          {
            t: "–ú–µ—Ä–∫–æ–∏–Ω—ã",
            d: "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å, –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–ª–∏ —É–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä",
            l: "/coins",
            i: Coins,
          },
          {
            t: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏",
            d: "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å, –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–ª–∏ —É–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä",
            l: "/users",
            i: UserList,
          },
          {
            t: "–ù–∞—Å—Ç—Ä–æ–π–∫–∏",
            d: "–ò–∑–º–µ–Ω–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –º–∞–≥–∞–∑–∏–Ω–∞ –∏ —Ç.–¥.",
            l: "/settings",
            i: FadersHorizontal,
          },
        ].map(({ t, d, l, i }) => (
          <Link key={l.replaceAll("/", "")} to={l}>
            <div className={classes.action}>
              {createElement(i, { className: classes.icon })}
              <div className={classes.description}>
                <h1>{t}</h1>
                <p>{d}</p>
              </div>
            </div>
          </Link>
        ))}
      </div>
    </>
  );
};
